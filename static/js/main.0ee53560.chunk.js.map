{"version":3,"sources":["App.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","url","size","svgRef","React","createRef","onChange","bind","assertThisInitialized","segs","qrCodeGenerator","QrSegment","makeSegments","svg","QrCode","encodeSegments","Ecc","QUARTILE","toSvgString","react_default","a","createElement","ref","dangerouslySetInnerHTML","__html","e","_e$currentTarget","currentTarget","name","value","setState","defineProperty","_this2","_this$state","vkui","activePanel","id","type","top","status","bottom","style","width","height","margin","before","download_default","onClick","saveSvgAsPng","current","children","backgroundColor","react_download_default","display","file","content","Component","connect","send","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0ee53560.chunk.js","sourcesContent":["import React from 'react';\nimport {Button, Div, FormLayout, Group, Input, ListItem, Panel, PanelHeader, Select, View} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport qrCodeGenerator from '@vkontakte/vk-qr';\nimport Download from '@axetroy/react-download';\nimport Icon24Download from '@vkontakte/icons/dist/24/download';\nimport {saveSvgAsPng} from 'save-svg-as-png';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            url: 'https://vk.com',\n            size: '300',\n        };\n\n        this.svgRef = React.createRef();\n\n        this.onChange = this.onChange.bind(this);\n    }\n\n    svg(url) {\n        let segs = qrCodeGenerator.QrSegment.makeSegments(url);\n        let svg = qrCodeGenerator.QrCode.encodeSegments(segs, qrCodeGenerator.QrCode.Ecc.QUARTILE, 1, 40, -1, true).toSvgString();\n\n        return <span ref={this.svgRef} dangerouslySetInnerHTML={{__html: url ? svg : ''}}/>;\n    }\n\n    onChange(e) {\n        const {name, value} = e.currentTarget;\n        this.setState({[name]: value});\n    }\n\n    render() {\n        const {url, size} = this.state;\n\n        let segs = qrCodeGenerator.QrSegment.makeSegments(url);\n        let svg = qrCodeGenerator.QrCode.encodeSegments(segs, qrCodeGenerator.QrCode.Ecc.QUARTILE, 1, 40, -1, true).toSvgString();\n\n\n        return (\n            <View activePanel=\"mainPanel\">\n                <Panel id=\"mainPanel\">\n                    <PanelHeader>QR</PanelHeader>\n                    <Group>\n                        <FormLayout>\n                            <Input\n                                type=\"string\"\n                                top=\"URL\"\n                                name=\"url\"\n                                value={url}\n                                onChange={this.onChange}\n                                status={url ? 'valid' : 'error'}\n                                bottom={url ? '' : 'Введите URL'}\n                            />\n\n                            <Select top=\"Размер\" name=\"size\" onChange={this.onChange}>\n                                <option value=\"300\">300x300</option>\n                                <option value=\"500\">500x500</option>\n                                <option value=\"200\">200x200</option>\n                                <option value=\"100\">100x100</option>\n                            </Select>\n                        </FormLayout>\n\n                        <Div style={{\n                            width: size + 'px',\n                            height: size + 'px',\n                            margin: 'auto'\n                        }}>\n                            {this.svg(url, size)}\n                        </Div>\n\n                        <Div>\n                            <Button before={<Icon24Download/>} size=\"l\" onClick={() => {\n                                saveSvgAsPng(this.svgRef.current.children[0], \"png.png\", {backgroundColor: '#fff'})\n                            }}>PNG</Button>\n                            <Download style={{display: 'inline'}} file=\"qr.svg\" content={svg}>\n                                <Button before={<Icon24Download/>} size=\"l\">SVG</Button>\n                            </Download>\n\n                        </Div>\n                    </Group>\n                </Panel>\n            </View>\n        );\n    }\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}