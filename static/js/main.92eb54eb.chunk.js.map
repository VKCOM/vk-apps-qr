{"version":3,"sources":["App.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","url","svgRef","React","createRef","onChange","bind","assertThisInitialized","savePNG","qrSvg","qrCodeGenerator","createQR","react_default","a","createElement","ref","dangerouslySetInnerHTML","__html","saveSvgAsPng","current","children","e","_e$currentTarget","currentTarget","name","value","setState","defineProperty","segs","QrSegment","makeSegments","svg","QrCode","encodeSegments","Ecc","QUARTILE","toSvgString","vkui","activePanel","id","type","top","status","bottom","style","textAlign","display","justifyContent","before","download_default","size","maxWidth","onClick","stretched","react_download_default","file","content","flexGrow","Component","connect","send","ReactDOM","render","src_App","document","getElementById"],"mappings":"sSAgFeA,cAvEX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACTC,IAAK,kBAGTR,EAAKS,OAASC,IAAMC,YAEpBX,EAAKY,SAAWZ,EAAKY,SAASC,KAAdZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KAChBA,EAAKe,QAAUf,EAAKe,QAAQF,KAAbZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KAVAA,mEAafQ,GACA,IAAMQ,EAAQC,IAAgBC,SAASV,EAAK,IAAK,aAEjD,OAAOW,EAAAC,EAAAC,cAAA,QAAMC,IAAKnB,KAAKM,OAAQc,wBAAyB,CAACC,OAAQhB,EAAMQ,EAAQ,wCAI/ES,uBAAatB,KAAKM,OAAOiB,QAAQC,SAAS,GAAI,4CAGzCC,GAAG,IAAAC,EACcD,EAAEE,cAAjBC,EADCF,EACDE,KAAMC,EADLH,EACKG,MACb7B,KAAK8B,SAALhC,OAAAiC,EAAA,EAAAjC,CAAA,GAAgB8B,EAAOC,qCAGlB,IACExB,EAAOL,KAAKI,MAAZC,IAEH2B,EAAOlB,IAAgBmB,UAAUC,aAAa7B,GAC9C8B,EAAMrB,IAAgBsB,OAAOC,eAAeL,EAAMlB,IAAgBsB,OAAOE,IAAIC,SAAU,EAAG,IAAK,GAAG,GAAMC,cAG5G,OACIxB,EAAAC,EAAAC,cAACuB,EAAA,KAAD,CAAMC,YAAY,aACd1B,EAAAC,EAAAC,cAACuB,EAAA,MAAD,CAAOE,GAAG,aACN3B,EAAAC,EAAAC,cAACuB,EAAA,YAAD,WACAzB,EAAAC,EAAAC,cAACuB,EAAA,MAAD,KACIzB,EAAAC,EAAAC,cAACuB,EAAA,WAAD,KACIzB,EAAAC,EAAAC,cAACuB,EAAA,MAAD,CACIG,KAAK,SACLC,IAAI,uCACJjB,KAAK,MACLC,MAAOxB,EACPI,SAAUT,KAAKS,SACfqC,OAAQzC,EAAM,QAAU,QACxB0C,OAAQ1C,EAAM,GAAK,qFAI3BW,EAAAC,EAAAC,cAACuB,EAAA,IAAD,CAAKO,MAAO,CACRC,UAAW,WAEVjD,KAAKmC,IAAI9B,IAGdW,EAAAC,EAAAC,cAACuB,EAAA,IAAD,CAAKO,MAAO,CAACE,QAAS,OAAQC,eAAkB,kBAC5CnC,EAAAC,EAAAC,cAACuB,EAAA,OAAD,CAAQW,OAAQpC,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,MAAmBqC,KAAK,KAAKN,MAAO,CAAEO,SAAU,mBAAqBC,QAASxD,KAAKY,QAAS6C,WAAS,GAArH,OACAzC,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CAAU0C,KAAK,SAASC,QAASzB,EAAKa,MAAO,CAAEa,SAAU,EAAGN,SAAU,oBAClEvC,EAAAC,EAAAC,cAACuB,EAAA,OAAD,CAAQW,OAAQpC,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,MAAmBqC,KAAK,KAAKG,WAAS,GAAtD,mBA9DdlD,IAAMuD,WCAxBC,IAAQC,KAAK,eAAgB,IAE7BC,IAASC,OAAOlD,EAAAC,EAAAC,cAACiD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.92eb54eb.chunk.js","sourcesContent":["import React from 'react';\nimport {Button, Div, FormLayout, Group, Input, Panel, PanelHeader, View} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport qrCodeGenerator from '@vkontakte/vk-qr';\nimport Download from '@axetroy/react-download';\nimport Icon24Download from '@vkontakte/icons/dist/24/download';\nimport {saveSvgAsPng} from 'save-svg-as-png';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            url: 'https://vk.com'\n        };\n\n        this.svgRef = React.createRef();\n\n        this.onChange = this.onChange.bind(this);\n        this.savePNG = this.savePNG.bind(this);\n    }\n\n    svg(url) {\n        const qrSvg = qrCodeGenerator.createQR(url, 256, 'classCode');\n\n        return <span ref={this.svgRef} dangerouslySetInnerHTML={{__html: url ? qrSvg : ''}}/>;\n    }\n\n    savePNG() {\n        saveSvgAsPng(this.svgRef.current.children[0], \"png.png\")\n    }\n\n    onChange(e) {\n        const {name, value} = e.currentTarget;\n        this.setState({[name]: value});\n    }\n\n    render() {\n        const {url} = this.state;\n\n        let segs = qrCodeGenerator.QrSegment.makeSegments(url);\n        let svg = qrCodeGenerator.QrCode.encodeSegments(segs, qrCodeGenerator.QrCode.Ecc.QUARTILE, 1, 40, -1, true).toSvgString();\n\n\n        return (\n            <View activePanel=\"mainPanel\">\n                <Panel id=\"mainPanel\">\n                    <PanelHeader>QR</PanelHeader>\n                    <Group>\n                        <FormLayout>\n                            <Input\n                                type=\"string\"\n                                top=\"Ссылка\"\n                                name=\"url\"\n                                value={url}\n                                onChange={this.onChange}\n                                status={url ? 'valid' : 'error'}\n                                bottom={url ? '' : 'Введите ссылку'}\n                            />\n                        </FormLayout>\n\n                        <Div style={{\n                            textAlign: 'center',\n                        }}>\n                            {this.svg(url)}\n                        </Div>\n\n                        <Div style={{display: 'flex', 'justifyContent': 'space-between'}}>\n                            <Button before={<Icon24Download/>} size=\"xl\" style={{ maxWidth: 'calc(50% - 4px)' }} onClick={this.savePNG} stretched>PNG</Button>\n                            <Download file=\"qr.svg\" content={svg} style={{ flexGrow: 1, maxWidth: 'calc(50% - 4px)' }}>\n                                <Button before={<Icon24Download/>} size=\"xl\" stretched>SVG</Button>\n                            </Download>\n                        </Div>\n                    </Group>\n                </Panel>\n            </View>\n        );\n    }\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}