{"version":3,"sources":["App.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onBackgroundColorChange","color","setState","backgroundColor","hex","onForegroundColorChange","foregroundColor","state","url","isShowLogo","logoData","isShowBackground","allowDownload","svgRef","React","createRef","onChange","bind","assertThisInitialized","savePNG","values","queryString","parse","window","location","search","indexOf","vk_platform","saveSvgAsPng","current","children","e","_e$currentTarget","currentTarget","name","value","checked","defineProperty","_this$state","options","qrSvg","qrCodeGenerator","createQR","react_default","a","createElement","vkui","activePanel","id","title","type","top","status","bottom","lib","triangle","colors","onChangeComplete","style","textAlign","ref","dangerouslySetInnerHTML","__html","display","justifyContent","before","download_default","size","maxWidth","onClick","stretched","react_download_default","file","content","flexGrow","Component","connect","subscribe","detail","schemeAttribute","document","createAttribute","data","scheme","body","attributes","setNamedItem","console","log","JSON","stringify","send","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.9b2c68dd.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    Button,\n    Checkbox,\n    Div,\n    FormLayout,\n    FormLayoutGroup,\n    Group,\n    Input,\n    Panel,\n    PanelHeader,\n    View\n} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport qrCodeGenerator from '@vkontakte/vk-qr';\nimport Download from '@axetroy/react-download';\nimport Icon24Download from '@vkontakte/icons/dist/24/download';\nimport {saveSvgAsPng} from 'save-svg-as-png';\nimport {TwitterPicker} from 'react-color';\nimport queryString from 'query-string'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            url: 'https://vk.com/vkapps_qr',\n            isShowLogo: true,\n            logoData: false,\n            isShowBackground: true,\n            backgroundColor: '#ffffff',\n            foregroundColor: '#000000',\n            allowDownload: false\n        };\n\n        this.svgRef = React.createRef();\n\n        this.onChange = this.onChange.bind(this);\n        this.savePNG = this.savePNG.bind(this);\n    }\n\n    componentDidMount() {\n        const values = queryString.parse(window.location.search);\n        let platformsWithoutDownload = ['mobile_android', 'mobile_iphone'];\n        this.setState({allowDownload: !!platformsWithoutDownload.indexOf(values.vk_platform)});\n    }\n\n    savePNG() {\n        saveSvgAsPng(this.svgRef.current.children[0], 'png.png')\n    }\n\n    onChange(e) {\n        const {name, value, checked} = e.currentTarget;\n        if (name === 'isShowLogo' || name === 'isShowBackground') {\n            this.setState({[name]: checked});\n        } else {\n            this.setState({[name]: value});\n        }\n    }\n\n    onBackgroundColorChange = (color) => {\n        this.setState({backgroundColor: color.hex});\n    };\n\n    onForegroundColorChange = (color) => {\n        this.setState({foregroundColor: color.hex});\n    };\n\n    render() {\n        const {allowDownload, url, isShowLogo, isShowBackground, backgroundColor, foregroundColor} = this.state;\n        const options = {\n            isShowLogo: isShowLogo,\n            isShowBackground: isShowBackground,\n            backgroundColor: backgroundColor,\n            foregroundColor: foregroundColor,\n        };\n\n        const qrSvg = qrCodeGenerator.createQR(url, 256, 'classCode', options);\n\n        let backgroundPresets = ['#FFFFFF', '#FF6900', '#FCB900', '#7BDCB5', '#00D084', '#8ED1FC', '#0693E3'];\n        let foregroundPresets = ['#000000', '#FF6900', '#FCB900', '#7BDCB5', '#00D084', '#8ED1FC', '#0693E3'];\n\n        return (\n            <View activePanel=\"mainPanel\">\n                <Panel id=\"mainPanel\">\n                    <PanelHeader>QR</PanelHeader>\n                    <Group title=\"Ссылка\">\n                        <FormLayout>\n                            <Input\n                                type=\"string\"\n                                top=\"Ссылка\"\n                                name=\"url\"\n                                value={url}\n                                onChange={this.onChange}\n                                status={url ? 'valid' : 'error'}\n                                bottom={url ? '' : 'Введите ссылку'}\n                            />\n                        </FormLayout>\n                    </Group>\n                    <Group title=\"Настройки\">\n                        <FormLayout>\n                            <Checkbox name=\"isShowLogo\" checked={isShowLogo} onChange={this.onChange}>Использовать\n                                логотип\n                                ВКонтакте</Checkbox>\n\n\n                            <FormLayoutGroup top=\"Цвет QR-кода\">\n                                <Div>\n                                    <TwitterPicker triangle='hide' colors={foregroundPresets} color={foregroundColor}\n                                                   onChangeComplete={this.onForegroundColorChange}/>\n                                </Div>\n                            </FormLayoutGroup>\n\n                            <Checkbox name=\"isShowBackground\" checked={isShowBackground}\n                                      onChange={this.onChange}>Фон</Checkbox>\n\n                            {isShowBackground ? (<FormLayoutGroup top=\"Цвет фона\">\n                                <Div>\n                                    <TwitterPicker triangle='hide' colors={backgroundPresets} color={backgroundColor}\n                                                   onChangeComplete={this.onBackgroundColorChange}/>\n                                </Div>\n                            </FormLayoutGroup>) : (null)}\n                        </FormLayout>\n\n                    </Group>\n\n                    <Div>\n                        <Div style={{\n                            textAlign: 'center',\n                        }}>\n                            <span ref={this.svgRef} dangerouslySetInnerHTML={{__html: url ? qrSvg : ''}}/>\n                        </Div>\n\n                        {allowDownload ? (<Div style={{display: 'flex', 'justifyContent': 'space-between'}}>\n                            <Button before={<Icon24Download/>} size=\"xl\" style={{maxWidth: 'calc(50% - 4px)'}}\n                                    onClick={this.savePNG} stretched>PNG</Button>\n                            <Download file=\"qr.svg\" content={qrSvg} style={{flexGrow: 1, maxWidth: 'calc(50% - 4px)'}}>\n                                <Button before={<Icon24Download/>} size=\"xl\" stretched>SVG</Button>\n                            </Download>\n                        </Div>) : (null)}\n                    </Div>\n                </Panel>\n            </View>\n        );\n    }\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\n\nconnect.subscribe((e) => {\n    switch (e.detail.type) {\n        case 'VKWebAppUpdateConfig':\n            let schemeAttribute = document.createAttribute('scheme');\n            schemeAttribute.value = e.detail.data.scheme ? e.detail.data.scheme : 'client_light';\n            document.body.attributes.setNamedItem(schemeAttribute);\n            break;\n\n        default:\n            console.log('Connect: ' + JSON.stringify(e));\n    }\n});\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}